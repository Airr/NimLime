# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Nimrod Source Code Filter
scopeName: source.nimrod_filter
fileTypes: ["nimf"]
uuid: c6396a10-4bb4-4929-aee5-1d893828b098
patterns:
- name: meta.start.nimrod_filter
  begin: \A(#!)
  patterns:
  - name: comment.line.nimrod_filter
    begin: ^\s*#
    patterns:
    - name: constant.numeric.float.decimal.nimrod_filter
      match: \b((\d[_\d]*\.[_\d]+([eE][\+\-]?\d[_\d]*)?)|([eE][\+\-]?\d[_\d]*))('[fF](32|64))?

    - name: constant.numeric.integer.hexadecimal.nimrod_filter
      match: \b(0[xX]\h[_\h]*)('[iIuU](8|16|32|64))?

    - comment: For simplicity's sake, we don't enforce floats only having 32 and
               64 prefix types.
      name: constant.numeric.integer.octal.nimrod_filter
      match: \b(0o[0-7][_0-7]*)('[iIuUfF](8|16|32|64))?

    - name: constant.numeric.integer.binary.nimrod_filter
      match: \b(0(b|B)[01][_01]*)('[iIuUfF](8|16|32|64))?

    - name: constant.numeric.integer.decimal.nimrod_filter
      match: \b(\d[_\d]*)('[iIuUfF](8|16|32|64))?

    - comment: Language Constants.
      name: constant.language.nimrod_filter
      match: \b(true|false|inf|nil)\b

    - comment: Keywords that affect program control flow or scope.
      name: keyword.control.nimrod_filter
      match: \b(block|break|case|continue|do|elif|else|end|except|finally|for|if|raise|return|try|when|while|yield)\b

    - comment: Keyword boolean operators for expressions.
      name: keyword.operator.boolean.nimrod_filter
      match: (\b(and|in|is|isnot|not|notin|or|xor)\b)

    - comment: Generic operators for expressions.
      name: keyword.operator.nimrod_filter
      match: (\b()\b|(=|\+|-|\*|/|<|>|@|\$|~|&|%|!|\?|\^|\.|:|\\)+)

    - comment: Other keywords.
      name: keyword.other.nimrod_filter
      match: (\b(addr|as|asm|atomic|bind|cast|const|discard|distinct|div|enum|export|from|import|include|let|mod|object|of|ptr|ref|shl|shr|static|tuple|type|var)\b)

    - comment: Invalid and unused keywords.
      name: keyword.invalid.nimrod_filter
      match: (\b(converter|generic|interface|lambda|mixin|out|shared|with|without)\b)

    - comment: Built-in, concrete types.
      name: storage.type.concrete.nimrod_filter
      match: \b(((uint|int|float)(8|16|32|64)?)|bool|string|cstring|char|tobject|typedesc)\b

    - comment: Built-in, generic types.
      name: storage.type.generic.nimrod_filter
      match: \b(range|array|seq|natural|set|ref|ptr)\b

    - comment: Function types
      name: storage.type.function.nimrod_filter
      match: \b(proc|iterator|method|template|macro)\b

    - comment: Common functions
      name: keyword.function.nimrod_filter
      match: \b(echo|newException)\b

    - comment: Special types.
      name: storage.type.generic.nimrod_filter
      match: \b(openarray|varargs|void)\b

    - comment: (Raw) Triple Quoted String
      name: string.quoted.triple.nimrod_filter
      begin: (\w[_\w]*)?\"\"\"
      end: \"\"\"[^"]

    - comment: Raw Double Quoted String
      name: string.quoted.double.raw.nimrod_filter
      begin: r\"
      end: \"
      patterns:
      - match: \"\"

    - comment: Double Quoted String
      name: string.quoted.double.nimrod_filter
      begin: (\w[_\w]*)?\"
      end: \"
      patterns:
      - match: (\\([abenrclftv]|["']|[0-9])|x\h\h)

    - comment: Single quoted character literal
      name: string.quoted.single.nimrod_filter
      match: \'(\\\d{1,3}|\\?[^\n]?)\'
    end: \n
  end: \z(!?\n)
...