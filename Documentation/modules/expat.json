[
  {
    "name": "PParser", 
    "type": "skType", 
    "code": "PParser* = ptr TParserStruct"
  }, 
  {
    "name": "TContent_Quant", 
    "type": "skType", 
    "code": "TContent_Quant* {.size: sizeof(cint).} = enum \u000D\u000A  CQUANT_NONE, CQUANT_OPT, CQUANT_REP, CQUANT_PLUS"
  }, 
  {
    "name": "TContent", 
    "type": "skType", 
    "code": "TContent* {.pure, final.} = object \u000D\u000A  typ*: TContent_Type\u000D\u000A  quant*: TContent_Quant\u000D\u000A  name*: cstring\u000D\u000A  numchildren*: cint\u000D\u000A  children*: ptr TContent\u000D\u000A"
  }, 
  {
    "name": "TElementDeclHandler", 
    "type": "skType", 
    "code": "TElementDeclHandler* = proc (userData: pointer; name: cstring; \u000D\u000A                             model: ptr TContent) {.cdecl.}"
  }, 
  {
    "name": "SetElementDeclHandler", 
    "type": "skProc", 
    "code": "proc SetElementDeclHandler*(parser: PParser; eldecl: TElementDeclHandler) {.\u000D\u000A    cdecl, importc: \"XML_SetElementDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "TAttlistDeclHandler", 
    "type": "skType", 
    "code": "TAttlistDeclHandler* = proc (userData: pointer; elname: cstring; \u000D\u000A                             attname: cstring; att_type: cstring; dflt: cstring; \u000D\u000A                             isrequired: cint) {.cdecl.}"
  }, 
  {
    "name": "SetAttlistDeclHandler", 
    "type": "skProc", 
    "code": "proc SetAttlistDeclHandler*(parser: PParser; attdecl: TAttlistDeclHandler) {.\u000D\u000A    cdecl, importc: \"XML_SetAttlistDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "TXmlDeclHandler", 
    "type": "skType", 
    "code": "TXmlDeclHandler* = proc (userData: pointer; version: cstring; encoding: cstring; \u000D\u000A                         standalone: cint) {.cdecl.}"
  }, 
  {
    "name": "SetXmlDeclHandler", 
    "type": "skProc", 
    "code": "proc SetXmlDeclHandler*(parser: PParser; xmldecl: TXmlDeclHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetXmlDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "TMemory_Handling_Suite", 
    "type": "skType", 
    "code": "TMemory_Handling_Suite* {.pure, final.} = object \u000D\u000A  malloc_fcn*: proc (size: int): pointer {.cdecl.}\u000D\u000A  realloc_fcn*: proc (p: pointer; size: int): pointer {.cdecl.}\u000D\u000A  free_fcn*: proc (p: pointer) {.cdecl.}\u000D\u000A"
  }, 
  {
    "name": "ParserCreate", 
    "type": "skProc", 
    "code": "proc ParserCreate*(encoding: cstring): PParser {.cdecl, \u000D\u000A    importc: \"XML_ParserCreate\", dynlib: expatDll.}"
  }, 
  {
    "name": "ParserCreateNS", 
    "type": "skProc", 
    "code": "proc ParserCreateNS*(encoding: cstring; namespaceSeparator: char): PParser {.\u000D\u000A    cdecl, importc: \"XML_ParserCreateNS\", dynlib: expatDll.}"
  }, 
  {
    "name": "ParserCreate_MM", 
    "type": "skProc", 
    "code": "proc ParserCreate_MM*(encoding: cstring; memsuite: ptr TMemory_Handling_Suite; \u000D\u000A                      namespaceSeparator: cstring): PParser {.cdecl, \u000D\u000A    importc: \"XML_ParserCreate_MM\", dynlib: expatDll.}"
  }, 
  {
    "name": "ParserReset", 
    "type": "skProc", 
    "code": "proc ParserReset*(parser: PParser; encoding: cstring): Bool {.cdecl, \u000D\u000A    importc: \"XML_ParserReset\", dynlib: expatDll.}"
  }, 
  {
    "name": "TEndElementHandler", 
    "type": "skType", 
    "code": "TEndElementHandler* = proc (userData: pointer; name: cstring) {.cdecl.}"
  }, 
  {
    "name": "TCharacterDataHandler", 
    "type": "skType", 
    "code": "TCharacterDataHandler* = proc (userData: pointer; s: cstring; len: cint) {.cdecl.}"
  }, 
  {
    "name": "TProcessingInstructionHandler", 
    "type": "skType", 
    "code": "TProcessingInstructionHandler* = proc (userData: pointer; target: cstring; \u000D\u000A                                       data: cstring) {.cdecl.}"
  }, 
  {
    "name": "TEndCdataSectionHandler", 
    "type": "skType", 
    "code": "TEndCdataSectionHandler* = proc (userData: pointer) {.cdecl.}"
  }, 
  {
    "name": "TDefaultHandler", 
    "type": "skType", 
    "code": "TDefaultHandler* = proc (userData: pointer; s: cstring; len: cint) {.cdecl.}"
  }, 
  {
    "name": "TStartDoctypeDeclHandler", 
    "type": "skType", 
    "code": "TStartDoctypeDeclHandler* = proc (userData: pointer; doctypeName: cstring; \u000D\u000A                                  sysid: cstring; pubid: cstring; \u000D\u000A                                  has_internal_subset: cint) {.cdecl.}"
  }, 
  {
    "name": "TEndDoctypeDeclHandler", 
    "type": "skType", 
    "code": "TEndDoctypeDeclHandler* = proc (userData: pointer) {.cdecl.}"
  }, 
  {
    "name": "TEntityDeclHandler", 
    "type": "skType", 
    "code": "TEntityDeclHandler* = proc (userData: pointer; entityName: cstring; \u000D\u000A                            is_parameter_entity: cint; value: cstring; \u000D\u000A                            value_length: cint; base: cstring; \u000D\u000A                            systemId: cstring; publicId: cstring; \u000D\u000A                            notationName: cstring) {.cdecl.}"
  }, 
  {
    "name": "SetEntityDeclHandler", 
    "type": "skProc", 
    "code": "proc SetEntityDeclHandler*(parser: PParser; handler: TEntityDeclHandler) {.\u000D\u000A    cdecl, importc: \"XML_SetEntityDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "TUnparsedEntityDeclHandler", 
    "type": "skType", 
    "code": "TUnparsedEntityDeclHandler* = proc (userData: pointer; entityName: cstring; \u000D\u000A                                    base: cstring; systemId: cstring; \u000D\u000A                                    publicId, notationName: cstring) {.cdecl.}"
  }, 
  {
    "name": "TNotationDeclHandler", 
    "type": "skType", 
    "code": "TNotationDeclHandler* = proc (userData: pointer; notationName: cstring; \u000D\u000A                              base: cstring; systemId: cstring; \u000D\u000A                              publicId: cstring) {.cdecl.}"
  }, 
  {
    "name": "TEndNamespaceDeclHandler", 
    "type": "skType", 
    "code": "TEndNamespaceDeclHandler* = proc (userData: pointer; prefix: cstring) {.cdecl.}"
  }, 
  {
    "name": "TNotStandaloneHandler", 
    "type": "skType", 
    "code": "TNotStandaloneHandler* = proc (userData: pointer): cint {.cdecl.}"
  }, 
  {
    "name": "TExternalEntityRefHandler", 
    "type": "skType", 
    "code": "TExternalEntityRefHandler* = proc (parser: PParser; context: cstring; \u000D\u000A                                   base: cstring; systemId: cstring; \u000D\u000A                                   publicId: cstring): cint {.cdecl.}"
  }, 
  {
    "name": "TSkippedEntityHandler", 
    "type": "skType", 
    "code": "TSkippedEntityHandler* = proc (userData: pointer; entityName: cstring; \u000D\u000A                               is_parameter_entity: cint) {.cdecl.}"
  }, 
  {
    "name": "TEncoding", 
    "type": "skType", 
    "code": "TEncoding* {.pure, final.} = object \u000D\u000A  map*: array[0 .. 256 - 1, cint]\u000D\u000A  data*: pointer\u000D\u000A  convert*: proc (data: pointer; s: cstring): cint {.cdecl.}\u000D\u000A  release*: proc (data: pointer) {.cdecl.}\u000D\u000A"
  }, 
  {
    "name": "TUnknownEncodingHandler", 
    "type": "skType", 
    "code": "TUnknownEncodingHandler* = proc (encodingHandlerData: pointer; name: cstring; \u000D\u000A                                 info: ptr TEncoding): cint {.cdecl.}"
  }, 
  {
    "name": "SetElementHandler", 
    "type": "skProc", 
    "code": "proc SetElementHandler*(parser: PParser; start: TStartElementHandler; \u000D\u000A                        endHandler: TEndElementHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetElementHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetStartElementHandler", 
    "type": "skProc", 
    "code": "proc SetStartElementHandler*(parser: PParser; handler: TStartElementHandler) {.\u000D\u000A    cdecl, importc: \"XML_SetStartElementHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetEndElementHandler", 
    "type": "skProc", 
    "code": "proc SetEndElementHandler*(parser: PParser; handler: TEndElementHandler) {.\u000D\u000A    cdecl, importc: \"XML_SetEndElementHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetCharacterDataHandler", 
    "type": "skProc", 
    "code": "proc SetCharacterDataHandler*(parser: PParser; handler: TCharacterDataHandler) {.\u000D\u000A    cdecl, importc: \"XML_SetCharacterDataHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetProcessingInstructionHandler", 
    "type": "skProc", 
    "code": "proc SetProcessingInstructionHandler*(parser: PParser; \u000D\u000A                                      handler: TProcessingInstructionHandler) {.\u000D\u000A    cdecl, importc: \"XML_SetProcessingInstructionHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetCommentHandler", 
    "type": "skProc", 
    "code": "proc SetCommentHandler*(parser: PParser; handler: TCommentHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetCommentHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetCdataSectionHandler", 
    "type": "skProc", 
    "code": "proc SetCdataSectionHandler*(parser: PParser; start: TStartCdataSectionHandler; \u000D\u000A                             endHandler: TEndCdataSectionHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetCdataSectionHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetStartCdataSectionHandler", 
    "type": "skProc", 
    "code": "proc SetStartCdataSectionHandler*(parser: PParser; \u000D\u000A                                  start: TStartCdataSectionHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetStartCdataSectionHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetEndCdataSectionHandler", 
    "type": "skProc", 
    "code": "proc SetEndCdataSectionHandler*(parser: PParser; \u000D\u000A                                endHandler: TEndCdataSectionHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetEndCdataSectionHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetDefaultHandler", 
    "type": "skProc", 
    "code": "proc SetDefaultHandler*(parser: PParser; handler: TDefaultHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetDefaultHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetDefaultHandlerExpand", 
    "type": "skProc", 
    "code": "proc SetDefaultHandlerExpand*(parser: PParser; handler: TDefaultHandler) {.\u000D\u000A    cdecl, importc: \"XML_SetDefaultHandlerExpand\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetDoctypeDeclHandler", 
    "type": "skProc", 
    "code": "proc SetDoctypeDeclHandler*(parser: PParser; start: TStartDoctypeDeclHandler; \u000D\u000A                            endHandler: TEndDoctypeDeclHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetDoctypeDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetStartDoctypeDeclHandler", 
    "type": "skProc", 
    "code": "proc SetStartDoctypeDeclHandler*(parser: PParser; \u000D\u000A                                 start: TStartDoctypeDeclHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetStartDoctypeDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetEndDoctypeDeclHandler", 
    "type": "skProc", 
    "code": "proc SetEndDoctypeDeclHandler*(parser: PParser; \u000D\u000A                               endHandler: TEndDoctypeDeclHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetEndDoctypeDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetUnparsedEntityDeclHandler", 
    "type": "skProc", 
    "code": "proc SetUnparsedEntityDeclHandler*(parser: PParser; \u000D\u000A                                   handler: TUnparsedEntityDeclHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetUnparsedEntityDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetNotationDeclHandler", 
    "type": "skProc", 
    "code": "proc SetNotationDeclHandler*(parser: PParser; handler: TNotationDeclHandler) {.\u000D\u000A    cdecl, importc: \"XML_SetNotationDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetNamespaceDeclHandler", 
    "type": "skProc", 
    "code": "proc SetNamespaceDeclHandler*(parser: PParser; \u000D\u000A                              start: TStartNamespaceDeclHandler; \u000D\u000A                              endHandler: TEndNamespaceDeclHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetNamespaceDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetStartNamespaceDeclHandler", 
    "type": "skProc", 
    "code": "proc SetStartNamespaceDeclHandler*(parser: PParser; \u000D\u000A                                   start: TStartNamespaceDeclHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetStartNamespaceDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetEndNamespaceDeclHandler", 
    "type": "skProc", 
    "code": "proc SetEndNamespaceDeclHandler*(parser: PParser; \u000D\u000A                                 endHandler: TEndNamespaceDeclHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetEndNamespaceDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetNotStandaloneHandler", 
    "type": "skProc", 
    "code": "proc SetNotStandaloneHandler*(parser: PParser; handler: TNotStandaloneHandler) {.\u000D\u000A    cdecl, importc: \"XML_SetNotStandaloneHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetExternalEntityRefHandler", 
    "type": "skProc", 
    "code": "proc SetExternalEntityRefHandler*(parser: PParser; \u000D\u000A                                  handler: TExternalEntityRefHandler) {.cdecl, \u000D\u000A    importc: \"XML_SetExternalEntityRefHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetExternalEntityRefHandlerArg", 
    "type": "skProc", 
    "code": "proc SetExternalEntityRefHandlerArg*(parser: PParser; arg: pointer) {.cdecl, \u000D\u000A    importc: \"XML_SetExternalEntityRefHandlerArg\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetSkippedEntityHandler", 
    "type": "skProc", 
    "code": "proc SetSkippedEntityHandler*(parser: PParser; handler: TSkippedEntityHandler) {.\u000D\u000A    cdecl, importc: \"XML_SetSkippedEntityHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetUnknownEncodingHandler", 
    "type": "skProc", 
    "code": "proc SetUnknownEncodingHandler*(parser: PParser; \u000D\u000A                                handler: TUnknownEncodingHandler; \u000D\u000A                                encodingHandlerData: pointer) {.cdecl, \u000D\u000A    importc: \"XML_SetUnknownEncodingHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "DefaultCurrent", 
    "type": "skProc", 
    "code": "proc DefaultCurrent*(parser: PParser) {.cdecl, importc: \"XML_DefaultCurrent\", \u000D\u000A                                        dynlib: expatDll.}"
  }, 
  {
    "name": "SetReturnNSTriplet", 
    "type": "skProc", 
    "code": "proc SetReturnNSTriplet*(parser: PParser; do_nst: cint) {.cdecl, \u000D\u000A    importc: \"XML_SetReturnNSTriplet\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetUserData", 
    "type": "skProc", 
    "code": "proc SetUserData*(parser: PParser; userData: pointer) {.cdecl, \u000D\u000A    importc: \"XML_SetUserData\", dynlib: expatDll.}"
  }, 
  {
    "name": "GetUserData", 
    "type": "skTemplate", 
    "code": "template GetUserData*(parser: expr): expr"
  }, 
  {
    "name": "SetEncoding", 
    "type": "skProc", 
    "code": "proc SetEncoding*(parser: PParser; encoding: cstring): TStatus {.cdecl, \u000D\u000A    importc: \"XML_SetEncoding\", dynlib: expatDll.}"
  }, 
  {
    "name": "UseParserAsHandlerArg", 
    "type": "skProc", 
    "code": "proc UseParserAsHandlerArg*(parser: PParser) {.cdecl, \u000D\u000A    importc: \"XML_UseParserAsHandlerArg\", dynlib: expatDll.}"
  }, 
  {
    "name": "UseForeignDTD", 
    "type": "skProc", 
    "code": "proc UseForeignDTD*(parser: PParser; useDTD: Bool): TError {.cdecl, \u000D\u000A    importc: \"XML_UseForeignDTD\", dynlib: expatDll.}"
  }, 
  {
    "name": "SetBase", 
    "type": "skProc", 
    "code": "proc SetBase*(parser: PParser; base: cstring): TStatus {.cdecl, \u000D\u000A    importc: \"XML_SetBase\", dynlib: expatDll.}"
  }, 
  {
    "name": "GetBase", 
    "type": "skProc", 
    "code": "proc GetBase*(parser: PParser): cstring {.cdecl, importc: \"XML_GetBase\", \u000D\u000A    dynlib: expatDll.}"
  }, 
  {
    "name": "GetSpecifiedAttributeCount", 
    "type": "skProc", 
    "code": "proc GetSpecifiedAttributeCount*(parser: PParser): cint {.cdecl, \u000D\u000A    importc: \"XML_GetSpecifiedAttributeCount\", dynlib: expatDll.}"
  }, 
  {
    "name": "GetIdAttributeIndex", 
    "type": "skProc", 
    "code": "proc GetIdAttributeIndex*(parser: PParser): cint {.cdecl, \u000D\u000A    importc: \"XML_GetIdAttributeIndex\", dynlib: expatDll.}"
  }, 
  {
    "name": "Parse", 
    "type": "skProc", 
    "code": "proc Parse*(parser: PParser; s: cstring; len: cint; isFinal: cint): TStatus {.\u000D\u000A    cdecl, importc: \"XML_Parse\", dynlib: expatDll.}"
  }, 
  {
    "name": "GetBuffer", 
    "type": "skProc", 
    "code": "proc GetBuffer*(parser: PParser; len: cint): pointer {.cdecl, \u000D\u000A    importc: \"XML_GetBuffer\", dynlib: expatDll.}"
  }, 
  {
    "name": "ParseBuffer", 
    "type": "skProc", 
    "code": "proc ParseBuffer*(parser: PParser; len: cint; isFinal: cint): TStatus {.cdecl, \u000D\u000A    importc: \"XML_ParseBuffer\", dynlib: expatDll.}"
  }, 
  {
    "name": "StopParser", 
    "type": "skProc", 
    "code": "proc StopParser*(parser: PParser; resumable: Bool): TStatus {.cdecl, \u000D\u000A    importc: \"XML_StopParser\", dynlib: expatDll.}"
  }, 
  {
    "name": "ResumeParser", 
    "type": "skProc", 
    "code": "proc ResumeParser*(parser: PParser): TStatus {.cdecl, \u000D\u000A    importc: \"XML_ResumeParser\", dynlib: expatDll.}"
  }, 
  {
    "name": "TParsingStatus", 
    "type": "skType", 
    "code": "TParsingStatus* {.pure, final.} = object \u000D\u000A  parsing*: TParsing\u000D\u000A  finalBuffer*: Bool\u000D\u000A"
  }, 
  {
    "name": "GetParsingStatus", 
    "type": "skProc", 
    "code": "proc GetParsingStatus*(parser: PParser; status: ptr TParsingStatus) {.cdecl, \u000D\u000A    importc: \"XML_GetParsingStatus\", dynlib: expatDll.}"
  }, 
  {
    "name": "ExternalEntityParserCreate", 
    "type": "skProc", 
    "code": "proc ExternalEntityParserCreate*(parser: PParser; context: cstring; \u000D\u000A                                 encoding: cstring): PParser {.cdecl, \u000D\u000A    importc: \"XML_ExternalEntityParserCreate\", dynlib: expatDll.}"
  }, 
  {
    "name": "TParamEntityParsing", 
    "type": "skType", 
    "code": "TParamEntityParsing* = enum \u000D\u000A  PARAM_ENTITY_PARSING_NEVER, PARAM_ENTITY_PARSING_UNLESS_STANDALONE, \u000D\u000A  PARAM_ENTITY_PARSING_ALWAYS"
  }, 
  {
    "name": "SetParamEntityParsing", 
    "type": "skProc", 
    "code": "proc SetParamEntityParsing*(parser: PParser; parsing: TParamEntityParsing): cint {.\u000D\u000A    cdecl, importc: \"XML_SetParamEntityParsing\", dynlib: expatDll.}"
  }, 
  {
    "name": "GetErrorCode", 
    "type": "skProc", 
    "code": "proc GetErrorCode*(parser: PParser): TError {.cdecl, \u000D\u000A    importc: \"XML_GetErrorCode\", dynlib: expatDll.}"
  }, 
  {
    "name": "GetCurrentLineNumber", 
    "type": "skProc", 
    "code": "proc GetCurrentLineNumber*(parser: PParser): int {.cdecl, \u000D\u000A    importc: \"XML_GetCurrentLineNumber\", dynlib: expatDll.}"
  }, 
  {
    "name": "GetCurrentColumnNumber", 
    "type": "skProc", 
    "code": "proc GetCurrentColumnNumber*(parser: PParser): int {.cdecl, \u000D\u000A    importc: \"XML_GetCurrentColumnNumber\", dynlib: expatDll.}"
  }, 
  {
    "name": "GetCurrentByteIndex", 
    "type": "skProc", 
    "code": "proc GetCurrentByteIndex*(parser: PParser): int {.cdecl, \u000D\u000A    importc: \"XML_GetCurrentByteIndex\", dynlib: expatDll.}"
  }, 
  {
    "name": "GetCurrentByteCount", 
    "type": "skProc", 
    "code": "proc GetCurrentByteCount*(parser: PParser): cint {.cdecl, \u000D\u000A    importc: \"XML_GetCurrentByteCount\", dynlib: expatDll.}"
  }, 
  {
    "name": "GetInputContext", 
    "type": "skProc", 
    "code": "proc GetInputContext*(parser: PParser; offset: ptr cint; size: ptr cint): cstring {.\u000D\u000A    cdecl, importc: \"XML_GetInputContext\", dynlib: expatDll.}"
  }, 
  {
    "name": "FreeContentModel", 
    "type": "skProc", 
    "code": "proc FreeContentModel*(parser: PParser; model: ptr TContent) {.cdecl, \u000D\u000A    importc: \"XML_FreeContentModel\", dynlib: expatDll.}"
  }, 
  {
    "name": "MemMalloc", 
    "type": "skProc", 
    "code": "proc MemMalloc*(parser: PParser; size: int): pointer {.cdecl, \u000D\u000A    importc: \"XML_MemMalloc\", dynlib: expatDll.}"
  }, 
  {
    "name": "MemRealloc", 
    "type": "skProc", 
    "code": "proc MemRealloc*(parser: PParser; p: pointer; size: int): pointer {.cdecl, \u000D\u000A    importc: \"XML_MemRealloc\", dynlib: expatDll.}"
  }, 
  {
    "name": "MemFree", 
    "type": "skProc", 
    "code": "proc MemFree*(parser: PParser; p: pointer) {.cdecl, importc: \"XML_MemFree\", \u000D\u000A    dynlib: expatDll.}"
  }, 
  {
    "name": "ParserFree", 
    "type": "skProc", 
    "code": "proc ParserFree*(parser: PParser) {.cdecl, importc: \"XML_ParserFree\", \u000D\u000A                                    dynlib: expatDll.}"
  }, 
  {
    "name": "ErrorString", 
    "type": "skProc", 
    "code": "proc ErrorString*(code: TError): cstring {.cdecl, importc: \"XML_ErrorString\", \u000D\u000A    dynlib: expatDll.}"
  }, 
  {
    "name": "ExpatVersion", 
    "type": "skProc", 
    "code": "proc ExpatVersion*(): cstring {.cdecl, importc: \"XML_ExpatVersion\", \u000D\u000A                                dynlib: expatDll.}"
  }, 
  {
    "name": "TExpat_Version", 
    "type": "skType", 
    "code": "TExpat_Version* {.pure, final.} = object \u000D\u000A  major*: cint\u000D\u000A  minor*: cint\u000D\u000A  micro*: cint\u000D\u000A"
  }, 
  {
    "name": "ExpatVersionInfo", 
    "type": "skProc", 
    "code": "proc ExpatVersionInfo*(): TExpat_Version {.cdecl, \u000D\u000A    importc: \"XML_ExpatVersionInfo\", dynlib: expatDll.}"
  }, 
  {
    "name": "TFeature", 
    "type": "skType", 
    "code": "TFeature* {.pure, final.} = object \u000D\u000A  feature*: TFeatureEnum\u000D\u000A  name*: cstring\u000D\u000A  value*: int\u000D\u000A"
  }, 
  {
    "name": "GetFeatureList", 
    "type": "skProc", 
    "code": "proc GetFeatureList*(): ptr TFeature {.cdecl, importc: \"XML_GetFeatureList\", \u000D\u000A                                       dynlib: expatDll.}"
  }, 
  {
    "name": "MICRO_VERSION", 
    "type": "skConst", 
    "code": "MICRO_VERSION* = 1"
  }
]