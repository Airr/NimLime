<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>nim</string>
	</array>
	<key>name</key>
	<string>Nimrod</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.nimrod</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.TODO.nimrod</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>A documentation comment.</string>
			<key>match</key>
			<string>(##\s*(TODO|todo)?).*$\n?</string>
			<key>name</key>
			<string>comment.line.number-sign.doc-comment.nimrod</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.nimrod</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.TODO.nimrod</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>A regular comment</string>
			<key>match</key>
			<string>(#\s*(TODO|todo)?).*$\n?</string>
			<key>name</key>
			<string>comment.line.number-sign.comment.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>A nimrod procedure or method</string>
			<key>name</key>
			<string>meta.proc.nimrod</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(proc|method|template|macro|iterator|converter)\s+\`?([^\s\`\*]*)\`?(\s*\*)?\s*\(</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.proc.nimrod</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.nimrod</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.nimrod</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>discard \"\"\"</string>
			<key>comment</key>
			<string>A discarded triple string literal comment</string>
			<key>end</key>
			<string>\"\"\"</string>
			<key>name</key>
			<string>comment.line.discarded.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>A float literal</string>
			<key>match</key>
			<string>\b((\d[_\d]*\.[_\d]+([eE][\+\-]?\d[_\d]*)?)|([eE][\+\-]?\d[_\d]*))('[fF](32|64))?</string>
			<key>name</key>
			<string>constant.numeric.float.decimal.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>A hexadecimal literal</string>
			<key>match</key>
			<string>\b(0[xX]\h[_\h]*)('[iIuU](8|16|32|64))?</string>
			<key>name</key>
			<string>constant.numeric.integer.hexadecimal.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>A base-8 integer literal</string>
			<key>match</key>
			<string>\b(0o[0-7][_0-7]*)('[iIuUfF](8|16|32|64))?</string>
			<key>name</key>
			<string>constant.numeric.integer.octal.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>A base-2 integer literal</string>
			<key>match</key>
			<string>\b(0(b|B)[01][_01]*)('[iIuUfF](8|16|32|64))?</string>
			<key>name</key>
			<string>constant.numeric.integer.binary.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>A base-10 integer literal</string>
			<key>match</key>
			<string>\b(\d[_\d]*)('[iIuUfF](8|16|32|64))?</string>
			<key>name</key>
			<string>constant.numeric.integer.decimal.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Language Constants.</string>
			<key>match</key>
			<string>\b(true|false|inf|nil)\b</string>
			<key>name</key>
			<string>constant.language.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Keywords that affect program control flow or scope.</string>
			<key>match</key>
			<string>\b(block|break|case|continue|do|elif|else|end|except|finally|for|if|raise|return|try|when|while|yield)\b</string>
			<key>name</key>
			<string>keyword.control.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Keyword boolean operators for expressions.</string>
			<key>match</key>
			<string>(\b(and|in|is|isnot|not|notin|or|xor)\b)</string>
			<key>name</key>
			<string>keyword.operator.boolean.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Generic operators for expressions.</string>
			<key>match</key>
			<string>(\b()\b|(=|\+|-|\*|/|&lt;|&gt;|@|\$|~|&amp;|%|!|\?|\^|\.|:|\\)+)</string>
			<key>name</key>
			<string>keyword.operator.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Other keywords.</string>
			<key>match</key>
			<string>(\b(addr|as|atomic|bind|cast|const|converter|discard|distinct|div|enum|export|from|import|include|let|mod|mixin|object|of|ptr|ref|shl|shr|static|type|var)\b)</string>
			<key>name</key>
			<string>keyword.other.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Invalid and unused keywords.</string>
			<key>match</key>
			<string>(\b(generic|interface|lambda|out|shared|with|without)\b)</string>
			<key>name</key>
			<string>keyword.invalid.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Common functions</string>
			<key>match</key>
			<string>\b(new|assert|echo|defined|newException|countup|countdown|high|low)\b</string>
			<key>name</key>
			<string>keyword.common.function.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Built-in, concrete types.</string>
			<key>match</key>
			<string>\b(((uint|int|float)(8|16|32|64)?)|bool|string|cstring|char|byte|tobject|typedesc|stmt|expr)\b</string>
			<key>name</key>
			<string>storage.type.concrete.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Built-in, generic types.</string>
			<key>match</key>
			<string>\b(range|array|seq|tuple|natural|set|ref|ptr)\b</string>
			<key>name</key>
			<string>storage.type.generic.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Function types</string>
			<key>match</key>
			<string>\b(proc|iterator|method|template|macro)\b</string>
			<key>name</key>
			<string>storage.type.function.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Special types.</string>
			<key>match</key>
			<string>\b(openarray|varargs|void)\b</string>
			<key>name</key>
			<string>storage.type.generic.nimrod</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\"\"\"</string>
			<key>comment</key>
			<string>(Raw) Triple Quoted String</string>
			<key>end</key>
			<string>\"\"\"</string>
			<key>name</key>
			<string>string.quoted.triple.nimrod</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>r\"</string>
			<key>comment</key>
			<string>Raw Double Quoted String</string>
			<key>end</key>
			<string>\"</string>
			<key>name</key>
			<string>string.quoted.double.raw.nimrod</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\"\"</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\"</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.nimrod</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Double Quoted String</string>
			<key>end</key>
			<string>\"</string>
			<key>name</key>
			<string>string.quoted.double.nimrod</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\\([abenrclftv\\]|["']|[0-9])|x\h\h)</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Single quoted character literal</string>
			<key>match</key>
			<string>\'(\\\d{1,3}|\\?[^\n]?)\'</string>
			<key>name</key>
			<string>string.quoted.single.nimrod</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>C</string>
			<key>name</key>
			<string>source.c.embedded.nimrod</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\{\.(emit:) ?(\"\"\")</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.nimrod</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>comment.syntax.nimrod</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\"\"\")\.?</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.syntax.nimrod</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\`</string>
							<key>end</key>
							<string>\`</string>
							<key>name</key>
							<string>keyword.operator.nimrod</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.c</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>assembly</string>
			<key>name</key>
			<string>source.asm.embedded.nimrod</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(asm )(\"\"\")</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.nimrod</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>comment.syntax.nimrod</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\"\"\"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>comment.syntax.nimrod</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\`</string>
							<key>end</key>
							<string>\`</string>
							<key>name</key>
							<string>keyword.operator.nimrod</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.asm</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.nimrod</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>tmpl specifier</string>
			<key>match</key>
			<string>(tmpli?)(?=( (html|xml|js|css|glsl))?\"\"\")</string>
		</dict>
		<dict>
			<key>name</key>
			<string>source.html.embedded.nimrod</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(html)(\"\"\")</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.nimrod</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>comment.syntax.nimrod</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\"\"\"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>comment.syntax.nimrod</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)\(</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)\{</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\}</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)(for|while|case|of|when|if|else|elif)( )</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\{|\n)</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>plain</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;!\$)(\$[a-zA-Z0-9]+)</string>
							<key>name</key>
							<string>keyword.operator.nimrod</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.xml</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>source.xml.embedded.nimrod</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(xml)(\"\"\")</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.nimrod</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>comment.syntax.nimrod</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\"\"\"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>comment.syntax.nimrod</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)\(</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)\{</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\}</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)(for|while|case|of|when|if|else|elif)( )</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\{|\n)</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>plain</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;!\$)(\$[a-zA-Z0-9]+)</string>
							<key>name</key>
							<string>keyword.operator.nimrod</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.xml</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>source.js.embedded.nimrod</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(js)(\"\"\")</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.nimrod</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>comment.syntax.nimrod</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\"\"\"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>comment.syntax.nimrod</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)\(</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)\{</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\}</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)(for|while|case|of|when|if|else|elif)( )</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\{|\n)</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>plain</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;!\$)(\$[a-zA-Z0-9]+)</string>
							<key>name</key>
							<string>keyword.operator.nimrod</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.js</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>source.css.embedded.nimrod</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(css)(\"\"\")</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.nimrod</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>comment.syntax.nimrod</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\"\"\"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>comment.syntax.nimrod</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)\(</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)\{</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\}</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)(for|while|case|of|when|if|else|elif)( )</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\{|\n)</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>plain</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;!\$)(\$[a-zA-Z0-9]+)</string>
							<key>name</key>
							<string>keyword.operator.nimrod</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.css</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string>source.glsl.embedded.nimrod</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(glsl)(\"\"\")</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.nimrod</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>comment.syntax.nimrod</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\"\"\"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>comment.syntax.nimrod</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)\(</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)\{</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\}</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;!\$)(\$)(for|while|case|of|when|if|else|elif)( )</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.nimrod</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\{|\n)</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>plain</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.nimrod</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;!\$)(\$[a-zA-Z0-9]+)</string>
							<key>name</key>
							<string>keyword.operator.nimrod</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.glsl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.nimrod</string>
	<key>uuid</key>
	<string>fa6f2c1c-dd3f-4bcd-b2be-d05312be4080</string>
</dict>
</plist>
